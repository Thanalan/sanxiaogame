//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.ExchangeComponent gameExchange { get { return (Game.ExchangeComponent)GetComponent(GameComponentsLookup.GameExchange); } }
    public bool hasGameExchange { get { return HasComponent(GameComponentsLookup.GameExchange); } }

    public void AddGameExchange(Game.ExchangeState newExchangeState) {
        var index = GameComponentsLookup.GameExchange;
        var component = (Game.ExchangeComponent)CreateComponent(index, typeof(Game.ExchangeComponent));
        component.exchangeState = newExchangeState;
        AddComponent(index, component);
    }

    public void ReplaceGameExchange(Game.ExchangeState newExchangeState) {
        var index = GameComponentsLookup.GameExchange;
        var component = (Game.ExchangeComponent)CreateComponent(index, typeof(Game.ExchangeComponent));
        component.exchangeState = newExchangeState;
        ReplaceComponent(index, component);
    }

    public void RemoveGameExchange() {
        RemoveComponent(GameComponentsLookup.GameExchange);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameExchange;

    public static Entitas.IMatcher<GameEntity> GameExchange {
        get {
            if (_matcherGameExchange == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameExchange);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameExchange = matcher;
            }

            return _matcherGameExchange;
        }
    }
}
