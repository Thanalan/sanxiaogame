//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameLoadSpriteListenerComponent gameLoadSpriteListener { get { return (GameLoadSpriteListenerComponent)GetComponent(GameComponentsLookup.GameLoadSpriteListener); } }
    public bool hasGameLoadSpriteListener { get { return HasComponent(GameComponentsLookup.GameLoadSpriteListener); } }

    public void AddGameLoadSpriteListener(System.Collections.Generic.List<IGameLoadSpriteListener> newValue) {
        var index = GameComponentsLookup.GameLoadSpriteListener;
        var component = (GameLoadSpriteListenerComponent)CreateComponent(index, typeof(GameLoadSpriteListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameLoadSpriteListener(System.Collections.Generic.List<IGameLoadSpriteListener> newValue) {
        var index = GameComponentsLookup.GameLoadSpriteListener;
        var component = (GameLoadSpriteListenerComponent)CreateComponent(index, typeof(GameLoadSpriteListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameLoadSpriteListener() {
        RemoveComponent(GameComponentsLookup.GameLoadSpriteListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameLoadSpriteListener;

    public static Entitas.IMatcher<GameEntity> GameLoadSpriteListener {
        get {
            if (_matcherGameLoadSpriteListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameLoadSpriteListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameLoadSpriteListener = matcher;
            }

            return _matcherGameLoadSpriteListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameLoadSpriteListener(IGameLoadSpriteListener value) {
        var listeners = hasGameLoadSpriteListener
            ? gameLoadSpriteListener.value
            : new System.Collections.Generic.List<IGameLoadSpriteListener>();
        listeners.Add(value);
        ReplaceGameLoadSpriteListener(listeners);
    }

    public void RemoveGameLoadSpriteListener(IGameLoadSpriteListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameLoadSpriteListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameLoadSpriteListener();
        } else {
            ReplaceGameLoadSpriteListener(listeners);
        }
    }
}
