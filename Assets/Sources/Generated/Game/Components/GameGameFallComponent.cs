//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Fall gameFall { get { return (Game.Fall)GetComponent(GameComponentsLookup.GameFall); } }
    public bool hasGameFall { get { return HasComponent(GameComponentsLookup.GameFall); } }

    public void AddGameFall(Game.FallState newState) {
        var index = GameComponentsLookup.GameFall;
        var component = (Game.Fall)CreateComponent(index, typeof(Game.Fall));
        component.state = newState;
        AddComponent(index, component);
    }

    public void ReplaceGameFall(Game.FallState newState) {
        var index = GameComponentsLookup.GameFall;
        var component = (Game.Fall)CreateComponent(index, typeof(Game.Fall));
        component.state = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveGameFall() {
        RemoveComponent(GameComponentsLookup.GameFall);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameFall;

    public static Entitas.IMatcher<GameEntity> GameFall {
        get {
            if (_matcherGameFall == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameFall);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameFall = matcher;
            }

            return _matcherGameFall;
        }
    }
}
